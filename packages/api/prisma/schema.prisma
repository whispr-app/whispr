// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  username String    @unique
  nickname String
  password String
  tokens   Token[]
  keyPair  KeyPair?
  messages Message[]

  userChannelPermissions UserChannelPermissions[]
}

model KeyPair {
  id                  String @id @default(auto()) @map("_id") @db.ObjectId
  encryptedPrivateKey String
  publicKey           String
  user                User   @relation(fields: [userId], references: [id])
  userId              String @unique @db.ObjectId
}

model Token {
  id     String  @id @default(auto()) @map("_id") @db.ObjectId
  jti    String  @unique
  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}

model UserChannelPermissions {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?  @db.ObjectId
  channel   Channel? @relation(fields: [channelId], references: [id])
  channelId String?  @db.ObjectId
  canRead   Boolean
  canWrite  Boolean
}

model Channel {
  id                     String                   @id @default(auto()) @map("_id") @db.ObjectId
  name                   String?
  messages               Message[]
  userChannelPermissions UserChannelPermissions[]
  lastMessageId          String?                  @db.ObjectId
}

model Message {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  text      MessageText[]
  user      User?         @relation(fields: [userId], references: [id])
  userId    String?       @db.ObjectId
  Channel   Channel?      @relation(fields: [channelId], references: [id])
  channelId String?       @db.ObjectId
}

model MessageText {
  id                    String   @id @default(auto()) @map("_id") @db.ObjectId
  cipherText            String
  targetUserId          String   @db.ObjectId
  message               Message? @relation(fields: [messageId], references: [id])
  messageId             String?  @db.ObjectId
  encryptedSymmetricKey String
}
